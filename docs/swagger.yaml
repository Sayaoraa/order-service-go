basePath: /
definitions:
  models.Order:
    type: object
  models.User:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      updated_at:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is an API for tracking orders.
  title: Order Tracking API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - multipart/form-data
      description: Авторизует пользователя с указанными username и password
      parameters:
      - description: Имя пользователя
        in: formData
        name: username
        required: true
        type: string
      - description: Пароль пользователя
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Авторизация пользователя
      tags:
      - auth
  /orders:
    get:
      description: Возвращает список всех заказов
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
      summary: Получение всех заказов
      tags:
      - orders
    post:
      consumes:
      - application/json
      description: Создает новый заказ с указанными данными
      parameters:
      - description: Данные заказа
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.Order'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Order'
      summary: Создание нового заказа
      tags:
      - orders
  /orders/{id}:
    put:
      consumes:
      - application/json
      description: Обновляет данные заказа по его ID
      parameters:
      - description: ID заказа
        in: path
        name: id
        required: true
        type: integer
      - description: Обновленные данные заказа
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.Order'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
      summary: Обновление заказа
      tags:
      - orders
  /register:
    post:
      consumes:
      - multipart/form-data
      description: Регистрирует нового пользователя с указанными username и password
      parameters:
      - description: Имя пользователя
        in: formData
        name: username
        required: true
        type: string
      - description: Пароль пользователя
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Регистрация нового пользователя
      tags:
      - auth
swagger: "2.0"
